#pragma once

/*
	单调栈用于求解一些后进先出，且对入栈的数据有单调要求的问题

	例如求最大柱面积

	思路：保持栈内得元素是具有某种单调性的（增大或减小），而将要入栈的元素如果破坏了这个单调性
		就先循环出栈，并对每个出栈的栈顶处理得到需要的结果。直到栈顶和将要入栈的元素满足单调性
		然后入栈新栈顶。并继续入栈下一个元素。
		而在上面的循环体中，出栈并根据出栈的元素做对应操作，从而求解问题。

	伪代码：
		for(...)//外循环，负责遍历需要进栈的元素
		{
			while(!st.empty() && st.top()与i遍历到的元素破坏了单调性)//如果栈空，就直接将i所指元素入栈
			{
				val=st.top();
				st.pop();
				//用val去求解问题
			}
			st.push(i所指的元素);
		}

		//注意，上面的for循环结束后，st内还有元素（至少有一个），因此还需将st的所有元素出栈，并再对每个出栈元素处理
		while(!st.empty()）
		{
			val=st.top();
			st.pop();
			//用val去求解问题
		}
		return res;
*/
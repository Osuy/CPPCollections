#pragma once

/*
	设计模式的目的是提高代码的复用性
	对于时常变化的需求，如果写死在代码上，就会需要频繁的修改
	而多态可以适应子类的变化，因此，设计模式很大程度上是将变化的东西取消，写成多态的形式

	在应用设计模式前，需要考虑需求在未来的变化。
	寻找出程序当中长久稳定的功能，还有时刻变化的功能
	为这两种功能分别创建类，其中，长久稳定的类使用多态调用时刻变化的类。
	这样，变化的需求就不会对稳定的代码产生影响
	
	于是，一个应用良好设计模式的类有以下三类：
	稳定类：承载了程序长期不变的功能，写死，调用变化类的虚函数
	变化类：继承自稳定类，程序中随时变化的功能，最重要的职责是将变化的功能包含在虚函数里
	
	
	
	做到这一点，需要实现6项原则。

*/
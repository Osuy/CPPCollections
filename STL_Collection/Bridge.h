#pragma once

/*
	桥接模式
	桥接模式和装饰器模式十分相似，都使用组合来代替继承，不同点在于：
		装饰器是基于同名虚函数多态组合
		桥接模式是将不同虚函数的功能进行组合

	在装饰器模式的情况下，倘若小方向的功能与大方向的功能的虚函数是不同名的，
	那么说明基类的有两个虚函数，需要这个两虚函数进行功能的组合
	那么显然，这两个虚函数也就没必要写在一个基类里。
	
	基类有func1和func2两个虚函数，func1有n个方向，func2有m个方向
	需要一个fun1和fun2功能的组合
	由于不是同名虚函数，装饰器也就没必要有fun1，只需要重写func2。
	所以，先将基类拆成基类1（包含func1），基类2（包含func2）
	一些类派生自基类1，重写func1
	桥接器派生自基类2，内部包含一个基类1指针
	一些类再派生自桥接器，重写func2，内部调用基类1指针->func1();

	这样就实现了func1和func2两个方向的函数的不同组合

	特征：
		非同名虚函数的组合多态
		将过多的功能拆分成两个基类，桥接器继承自其中一个基类，包含另一个基类的指针
*/